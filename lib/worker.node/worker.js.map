{"version":3,"sources":["worker.node/worker.js"],"names":[],"mappings":"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","file":"worker.node/worker.js","sourcesContent":["import child        from 'child_process';\nimport path         from 'path';\nimport EventEmitter from 'eventemitter3';\nimport EventStream  from 'event-stream';\nimport msgpack      from 'msgpack';\n\nimport { getConfig } from '../config';\n\nlet nextChildDebugPort = 45859;\n\nexport default class Worker extends EventEmitter {\n  /**\n   * @param {function|string} initialRunnable   Method or path to file to run.\n   * @param {object} [options]                  Options to be passed to child.fork()\n   *                                            or an integer/function `debugPort`.\n   */\n  constructor(initialRunnable, options = {}) {\n    super();\n\n    options.stdio = ['ipc', 'pipe', 'pipe', 'pipe'];\n\n    this.dataResponse = null;\n    this.fixDebuggerPort(options, () => {\n      this.slave = child.spawn(process.argv[0], [path.join(__dirname, 'slave.js')], options);\n    });\n    this.slave.on('message', this.handleMessage.bind(this));\n    this.slave.on('error', this.handleError.bind(this));\n    this.slave.on('exit', this.emit.bind(this, 'exit'));\n\n    this.so = this.slave.stdout.pipe(EventStream.split());\n    this.so.on('data', (data) => {\n      console.log('PID #' + this.slave.pid + ': ' + data);       // eslint-disable-line no-console\n    });\n    this.dataPipe = this.slave.stdio[3];\n    this.dataPipe.on('data', (data) => {\n      this.dataResponse = msgpack.unpack(data);\n    });\n    if (initialRunnable) {\n      this.run(initialRunnable);\n    }\n  }\n\n  run(toRun) {\n    if (typeof toRun === 'function') {\n      this.runMethod(toRun);\n    } else {\n      this.runScript(toRun);\n    }\n    return this;\n  }\n\n  runMethod(method) {\n    this.slave.send({\n      initByMethod : true,\n      method       : method.toString()\n    });\n  }\n\n  runScript(script) {\n    if (!script) { throw new Error('Must pass a function or a script path to run().'); }\n\n    const prefixedScriptPath = path.join(getConfig().basepath.node, script);\n\n    // attention: single script for node, array for browser\n    this.slave.send({\n      initByScript : true,\n      script       : path.resolve(prefixedScriptPath)\n    });\n  }\n\n  send(...args) {\n    if (args.length > 1) {\n      let data = args.pop();\n      // TODO: support more than just float64\n      if (data.constructor && data.constructor.name === 'Float64Array') {\n        this.dataPipe.write(new Buffer(data.buffer));\n      }\n    }\n    let param = args[0] || {};\n    this.slave.send({\n      doRun : true,\n      param\n    });\n    return this;\n  }\n\n  kill() {\n    this.slave.kill();\n    return this;\n  }\n\n  promise() {\n    return new Promise((resolve, reject) => {\n      this\n        .once('message', resolve)\n        .once('error', reject);\n    });\n  }\n\n  /**\n   * Need to change debug port. See https://github.com/andywer/threads.js/issues/16.\n   */\n  fixDebuggerPort(options, forkCallback) {\n    if (typeof v8debug !== 'object') {\n      forkCallback();\n      return;\n    }\n\n    let debugPort = nextChildDebugPort++;\n\n    if (options.debugPort) {\n      debugPort = typeof options.debugPort === 'function'\n                ? options.debugPort(debugPort) : options.debugPort;\n    }\n\n    // Temporarily change debug port number to something else.\n    process.execArgv.push('--debug=' + debugPort);\n    forkCallback();\n    process.execArgv.pop();\n  }\n\n  handleMessage(message) {\n    if (message.error) {\n      const error = new Error(message.error.message);\n      error.stack = message.error.stack;\n\n      this.handleError(error);\n    } else if (message.progress) {\n      this.handleProgress(message.progress);\n    } else {\n      this.emit('message', {data: this.dataResponse, args: [...message.response]});\n      this.emit('done', {data: this.dataResponse, args: [...message.response]});    // this one is just for convenience\n    }\n  }\n\n  handleProgress(progress) {\n    this.emit('progress', progress);\n  }\n\n  handleError(error) {\n    if (!this.listeners('error', true)) {\n      console.error(error.stack || error);       // eslint-disable-line no-console\n    }\n    this.emit('error', error);\n  }\n}\n"],"sourceRoot":"/source/"}